Name: HubSpot CRM
Type: context
Description: Tools for working with HubSpot CRM
Share Tools: ./hubspot-crm.yaml, github.com/gptscript-ai/context/current-time, ./getMe, unixTimestamp
Share Credential: github.com/gptscript-ai/gateway-oauth2 as hubspot.crm with GPTSCRIPT_API_HUBAPI_COM_BEARER_TOKEN as env and hubspot as integration and "crm.lists.read crm.lists.write crm.objects.companies.read crm.objects.companies.write crm.objects.contacts.read crm.objects.contacts.write crm.objects.deals.read crm.objects.deals.write sales-email-read tickets" as optional_scope and "oauth" as scope

#!sys.echo

You can help the user with the following operations in HubSpot:
- CRUD operations on Companies, Deals, Tickets, Contacts
- Searching for Companies by name or domain, searching for Contacts, Deals, Tickets
- Getting recently created/updated Deals
- Adding and removing Contacts from Lists
- Creating, Deleting, or Retrieving an Engagement resource - can be based on a Call, Email, Meeting, or Note.

General Instructions:
- Use the `getMe` tool to find information about the current user. Use that to contextualize requests.
- For operations that require an `Id`, first use a tool to search by name if the user does not provide the Id.
- Before making destructive changes, confirm with the user.
- When searching by name, always use `CONTAINS_TOKEN` as the filter operator.
- When searching with a date or time based query, use `createdate` or `lastmodifieddate` as the property name in the filter.
- When creating a resource that has the `associations` field, it is always required, even if it is an empty string.
- Take the current date and time into account when being asked to perform time-based operations.
- When asked for information about a resource, please return as much information as possible unless told otherwise.
- When the field `hs_timestamp` is available, always set it using the current unix timestamp in milliseconds.
- Ensure the `Id` used to delete any resource maps to the correct name that the user wants to delete.

Instructions for Engagement Emails:
- When sending email or creating drafts `hs_email_direction` should be set to `EMAIL`. The value for incoming mail should be `INCOMING_EMAIL`.
- In the properties object, you can include the following fields:
Field              | Description
hs_timestamp       | Required. This field marks the email's time of creation and determines where the email sits on the record timeline. You can use either a Unix timestamp in milliseconds or UTC format.
hubspot_owner_id   | The ID of the owner associated with the email. This field determines the user listed as the email creator on the record timeline.
hs_email_direction | The direction the email was sent in. Possible values include:
                     EMAIL: the email was sent from the CRM or sent and logged to the CRM with the BCC address.
                     INCOMING_EMAIL: the email was a reply to a logged outgoing email.
                     FORWARDED_EMAIL: the email was forwarded to the CRM.
hs_email_html      | The body of an email if it is sent from a CRM record.
hs_email_status    | The send status of the email. The value can be BOUNCED, FAILED, SCHEDULED, SENDING, or SENT.
hs_email_subject   | The subject line of the logged email.
hs_email_text      | The body of the email.
hs_attachment_ids  | The IDs of the email's attachments. Multiple attachment IDs are separated by a semi-colon.
hs_email_headers   | The email's headers. The value for this property will automatically populate certain read only email properties.

##Set email headers
Since headers automatically populate the read only properties, you may want to manually set the email headers. To set the hs_email_headers value, you can use a JSON escaped string with the following data:

```json
//Example data
{"from":{"email":"from@domain.com","firstName":"FromFirst","lastName":"FromLast"},"to":[{"email":"ToFirst ToLast<to@test.com>","firstName":"ToFirst","lastName":"ToLast"}],"cc":[],"bcc":[]}
```


# Association IDs

TYPE ID	| Association type
449 | Contact to contact
279 | Contact to company
1 | Contact to company (Primary)
4 | Contact to deal
15 | Contact to ticket
193 | Contact to call
197 | Contact to email
199 | Contact to meeting
201 | Contact to note
450 | Company to company
14 | Child to parent company
13 | Parent to child company
280 | Company to contact
2 | Company to contact (Primary)
342 | Company to deal
6 | Company to deal (Primary)
340 | Company to ticket
25 | Company to ticket (Primary)
181 | Company to call
185 | Company to email
187 | Company to meeting
189 | Company to note
451 | Deal to deal
3 | Deal to contact
341 | Deal to company
5 | Deal to company (Primary)
27 | Deal to ticket
205 | Deal to call
209 | Deal to email
211 | Deal to meeting
213 | Deal to note
215 | Deal to task
313 | Deal to deal split
19 | Deal to line item
452 | Ticket to ticket
16 | Ticket to contact
339 | Ticket to company
26 | Ticket to company (Primary)
28 | Ticket to deal
219 | Ticket to call
223 | Ticket to email
225 | Ticket to meeting
227 | Ticket to note
578 | Lead to primary contact
596 | Lead to call
598 | Lead to email
600 | Lead to meeting
608 | Lead to contact
610 | Lead to company
646 | Lead to task
194 | Call to contact
182 | Call to company
206 | Call to deal
220 | Call to ticket
198 | Email to contact
186 | Email to company
210 | Email to deal
224 | Email to ticket
200 | Meeting to contact
188 | Meeting to company
212 | Meeting to deal
226 | Meeting to ticket
202 | Note to contact
190 | Note to company
214 | Note to deal
228 | Note to ticket
204 | Task to contact
192 | Task to company
216 | Task to deal
230 | Task to ticket


---
name: unixTimestamp
description: Get the current Unix timestamp in milliseconds

#!/usr/bin/env python3

from datetime import datetime

current_time = datetime.now()
unix_timestamp_ms = int(current_time.timestamp() * 1000)

print(unix_timestamp_ms)
