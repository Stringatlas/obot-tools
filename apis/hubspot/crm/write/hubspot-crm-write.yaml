openapi: 3.0.1
info:
  title: HubSpot CRM Write
  version: v3
  description: ''
servers:
- url: https://api.hubapi.com
paths:
  /crm/v3/objects/calls/{callId}:
    delete:
      tags:
      - Basic
      summary: Archive
      description: Move an Object identified by `{callId}` to the recycling bin.
      operationId: DeleteEngagementCallById
      parameters:
      - name: callId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        '204':
          description: No content
          content: {}
        default:
          $ref: '#/components/responses/Error'
      security:
      - oauth2:
        - crm.objects.contacts.write
      - private_apps:
        - crm.objects.contacts.write
    patch:
      tags:
      - Basic
      summary: Update
      description: Perform a partial update of an Object identified by `{callId}`or
        optionally a unique property value as specified by the `idProperty` query
        param. `{callId}` refers to the internal object ID by default, and the `idProperty`
        query param refers to a property whose values are unique for the object. Provided
        property values will be overwritten. Read-only and non-existent properties
        will result in an error. Properties values can be cleared by passing an empty
        string.
      operationId: UpdateEngagementCallById
      parameters:
      - name: callId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: idProperty
        in: query
        description: The name of a property whose values are unique for this object
        required: false
        style: form
        explode: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SimplePublicObjectInput'
        required: true
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SimplePublicObject'
        default:
          $ref: '#/components/responses/Error'
      security:
      - oauth2:
        - crm.objects.contacts.write
      - private_apps:
        - crm.objects.contacts.write
  /crm/v3/objects/calls:
    post:
      tags:
      - Basic
      summary: Create
      description: Create a call with the given properties and return a copy of the
        object, including the ID. Documentation and examples for creating standard
        calls is provided.
      operationId: CreateEngagementCall
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SimplePublicObjectInputForCreate'
        required: true
      responses:
        '201':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SimplePublicObject'
        default:
          $ref: '#/components/responses/Error'
      security:
      - oauth2:
        - crm.objects.contacts.write
      - private_apps:
        - crm.objects.contacts.write
  /crm/v3/objects/emails/{emailId}:
    delete:
      tags:
      - Basic
      summary: Archive
      description: Move an Object identified by `{emailId}` to the recycling bin.
      operationId: DeleteEngagementEmailById
      parameters:
      - name: emailId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        '204':
          description: No content
          content: {}
        default:
          $ref: '#/components/responses/Error'
      security:
      - oauth2_legacy:
        - sales-email-read
      - oauth2:
        - crm.objects.contacts.write
      - private_apps_legacy:
        - sales-email-read
      - private_apps:
        - crm.objects.contacts.write
    patch:
      tags:
      - Basic
      summary: Update
      description: Perform a partial update of an Object identified by `{emailId}`or
        optionally a unique property value as specified by the `idProperty` query
        param. `{emailId}` refers to the internal object ID by default, and the `idProperty`
        query param refers to a property whose values are unique for the object. Provided
        property values will be overwritten. Read-only and non-existent properties
        will result in an error. Properties values can be cleared by passing an empty
        string.
      operationId: UpdateEngagementEmailById
      parameters:
      - name: emailId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: idProperty
        in: query
        description: The name of a property whose values are unique for this object
        required: false
        style: form
        explode: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SimplePublicObjectInput'
        required: true
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SimplePublicObject'
        default:
          $ref: '#/components/responses/Error'
      security:
      - oauth2_legacy:
        - sales-email-read
      - oauth2:
        - crm.objects.contacts.write
      - private_apps_legacy:
        - sales-email-read
      - private_apps:
        - crm.objects.contacts.write
  /crm/v3/objects/meetings/{meetingId}:
    delete:
      tags:
      - Basic
      summary: Archive
      description: Move an Object identified by `{meetingId}` to the recycling bin.
      operationId: DeleteEngagementMeetingById
      parameters:
      - name: meetingId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        '204':
          description: No content
          content: {}
        default:
          $ref: '#/components/responses/Error'
      security:
      - oauth2:
        - crm.objects.contacts.write
      - private_apps:
        - crm.objects.contacts.write
    patch:
      tags:
      - Basic
      summary: Update
      description: Perform a partial update of an Object identified by `{meetingId}`.
        `{meetingId}` refers to the internal object ID by default, or optionally any
        unique property value as specified by the `idProperty` query param. Provided
        property values will be overwritten. Read-only and non-existent properties
        will be ignored. Properties values can be cleared by passing an empty string.
      operationId: UpdateEngagementMeetingById
      parameters:
      - name: meetingId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: idProperty
        in: query
        description: The name of a property whose values are unique for this object
          type
        required: false
        style: form
        explode: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SimplePublicObjectInput'
        required: true
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SimplePublicObject'
        default:
          $ref: '#/components/responses/Error'
      security:
      - oauth2:
        - crm.objects.contacts.write
      - private_apps:
        - crm.objects.contacts.write
  /crm/v3/objects/meetings:
    post:
      tags:
      - Basic
      summary: Create
      description: Create a meeting with the given properties and return a copy of
        the object, including the ID. Documentation and examples for creating standard
        meetings is provided.
      operationId: CreateEngagementMeeting
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SimplePublicObjectInputForCreate'
        required: true
      responses:
        '201':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SimplePublicObject'
        default:
          $ref: '#/components/responses/Error'
      security:
      - oauth2:
        - crm.objects.contacts.write
      - private_apps:
        - crm.objects.contacts.write
  /crm/v3/objects/notes/{noteId}:
    delete:
      tags:
      - Basic
      summary: Archive
      description: Move an Object identified by `{noteId}` to the recycling bin.
      operationId: DeleteEngagementNoteById
      parameters:
      - name: noteId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        '204':
          description: No content
          content: {}
        default:
          $ref: '#/components/responses/Error'
      security:
      - oauth2:
        - crm.objects.contacts.write
      - private_apps:
        - crm.objects.contacts.write
    patch:
      tags:
      - Basic
      summary: Update
      description: Perform a partial update of an Object identified by `{noteId}`.
        `{noteId}` refers to the internal object ID by default, or optionally any
        unique property value as specified by the `idProperty` query param. Provided
        property values will be overwritten. Read-only and non-existent properties
        will be ignored. Properties values can be cleared by passing an empty string.
      operationId: UpdateEngagementNoteById
      parameters:
      - name: noteId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: idProperty
        in: query
        description: The name of a property whose values are unique for this object
          type
        required: false
        style: form
        explode: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SimplePublicObjectInput'
        required: true
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SimplePublicObject'
        default:
          $ref: '#/components/responses/Error'
      security:
      - oauth2:
        - crm.objects.contacts.write
      - private_apps:
        - crm.objects.contacts.write
  /crm/v3/objects/companies/{companyId}:
    delete:
      tags:
      - Basic
      summary: Archive
      description: Move an Object identified by `{companyId}` to the recycling bin.
      operationId: DeleteCompanyById
      parameters:
      - name: companyId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        '204':
          description: No content
          content: {}
        default:
          $ref: '#/components/responses/Error'
      security:
      - oauth2:
        - crm.objects.companies.write
      - private_apps:
        - crm.objects.companies.write
    patch:
      tags:
      - Basic
      summary: Update
      description: Perform a partial update of an Object identified by `{companyId}`.
        `{companyId}` refers to the internal object ID by default, or optionally any
        unique property value as specified by the `idProperty` query param. Provided
        property values will be overwritten. Read-only and non-existent properties
        will be ignored. Properties values can be cleared by passing an empty string.
      operationId: UpdateCompanyById
      parameters:
      - name: companyId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: idProperty
        in: query
        description: The name of a property whose values are unique for this object
          type
        required: false
        style: form
        explode: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SimplePublicObjectInput'
        required: true
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SimplePublicObject'
        default:
          $ref: '#/components/responses/Error'
      security:
      - oauth2:
        - crm.objects.companies.write
      - private_apps:
        - crm.objects.companies.write
  /crm/v3/objects/companies:
    post:
      tags:
      - Basic
      summary: Create
      description: Create a company with the given properties and return a copy of
        the object, including the ID. Documentation and examples for creating standard
        companies is provided.
      operationId: CreateCompany
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SimplePublicObjectInputForCreate'
        required: true
      responses:
        '201':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SimplePublicObject'
        default:
          $ref: '#/components/responses/Error'
      security:
      - oauth2:
        - crm.objects.companies.write
      - private_apps:
        - crm.objects.companies.write
  /crm/v3/objects/contacts/{contactId}:
    delete:
      tags:
      - Basic
      summary: Archive
      description: Move an Object identified by `{contactId}` to the recycling bin.
      operationId: DeleteContactById
      parameters:
      - name: contactId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        '204':
          description: No content
          content: {}
        default:
          $ref: '#/components/responses/Error'
      security:
      - oauth2:
        - crm.objects.contacts.write
      - private_apps:
        - crm.objects.contacts.write
    patch:
      tags:
      - Basic
      summary: Update
      description: Perform a partial update of an Object identified by `{contactId}`.
        `{contactId}` refers to the internal object ID. Provided property values will
        be overwritten. Read-only and non-existent properties will be ignored. Properties
        values can be cleared by passing an empty string.
      operationId: UpdateContactById
      parameters:
      - name: contactId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SimplePublicObjectInput'
        required: true
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SimplePublicObject'
        default:
          $ref: '#/components/responses/Error'
      security:
      - oauth2:
        - crm.objects.contacts.write
      - private_apps:
        - crm.objects.contacts.write
  /crm/v3/objects/contacts:
    post:
      tags:
      - Basic
      summary: Create
      description: Create a contact with the given properties and return a copy of
        the object, including the ID. Documentation and examples for creating standard
        contacts is provided.
      operationId: CreateContact
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SimplePublicObjectInputForCreate'
        required: true
      responses:
        '201':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SimplePublicObject'
        default:
          $ref: '#/components/responses/Error'
      security:
      - oauth2:
        - crm.objects.contacts.write
      - private_apps:
        - crm.objects.contacts.write
  /crm/v3/objects/deals/{dealId}:
    delete:
      tags:
      - Basic
      summary: Archive
      description: Move an Object identified by `{dealId}` to the recycling bin.
      operationId: DeleteDealById
      parameters:
      - name: dealId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        '204':
          description: No content
          content: {}
        default:
          $ref: '#/components/responses/Error'
      security:
      - oauth2:
        - crm.objects.deals.write
      - private_apps:
        - crm.objects.deals.write
    patch:
      tags:
      - Basic
      summary: Update
      description: Perform a partial update of an Object identified by `{dealId}`.
        `{dealId}` refers to the internal object ID by default, or optionally any
        unique property value as specified by the `idProperty` query param. Provided
        property values will be overwritten. Read-only and non-existent properties
        will be ignored. Properties values can be cleared by passing an empty string.
      operationId: UpdateDealById
      parameters:
      - name: dealId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: idProperty
        in: query
        description: The name of a property whose values are unique for this object
          type
        required: false
        style: form
        explode: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SimplePublicObjectInput'
        required: true
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SimplePublicObject'
        default:
          $ref: '#/components/responses/Error'
      security:
      - oauth2:
        - crm.objects.deals.write
      - private_apps:
        - crm.objects.deals.write
  /crm/v3/objects/deals:
    post:
      tags:
      - Basic
      summary: Create
      description: Create a deal with the given properties and return a copy of the
        object, including the ID. Documentation and examples for creating standard
        deals is provided.
      operationId: CreateDeal
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SimplePublicObjectInputForCreate'
        required: true
      responses:
        '201':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SimplePublicObject'
        default:
          $ref: '#/components/responses/Error'
      security:
      - oauth2:
        - crm.objects.deals.write
      - private_apps:
        - crm.objects.deals.write
  /crm/v3/lists/{listId}/memberships/add-and-remove:
    put:
      tags:
      - Memberships
      summary: Add and/or Remove Records from a List
      description: 'Add and/or remove records that have already been created in the
        system to and/or from a list.


        This endpoint only works for lists that have a `processingType` of `MANUAL`
        or `SNAPSHOT`.'
      operationId: AddAndRemoveContactsFromList
      parameters:
      - name: listId
        in: path
        description: The **ILS ID** of the `MANUAL` or `SNAPSHOT` list.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MembershipChangeRequest'
        required: true
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MembershipsUpdateResponse'
        default:
          $ref: '#/components/responses/Error'
      security:
      - private_apps:
        - crm.lists.write
        - crm.lists.read
      - oauth2:
        - crm.lists.write
        - crm.lists.read
  /crm/v3/objects/tickets/{ticketId}:
    delete:
      tags:
      - Basic
      summary: Archive
      description: Move an Object identified by `{ticketId}` to the recycling bin.
      operationId: DeleteTicketById
      parameters:
      - name: ticketId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        '204':
          description: No content
          content: {}
        default:
          $ref: '#/components/responses/Error'
      security:
      - oauth2_legacy:
        - tickets
      - private_apps_legacy:
        - tickets
    patch:
      tags:
      - Basic
      summary: Update
      description: Perform a partial update of an Object identified by `{ticketId}`or
        optionally a unique property value as specified by the `idProperty` query
        param. `{ticketId}` refers to the internal object ID by default, and the `idProperty`
        query param refers to a property whose values are unique for the object. Provided
        property values will be overwritten. Read-only and non-existent properties
        will result in an error. Properties values can be cleared by passing an empty
        string.
      operationId: UpdateTicketById
      parameters:
      - name: ticketId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: idProperty
        in: query
        description: The name of a property whose values are unique for this object
        required: false
        style: form
        explode: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SimplePublicObjectInput'
        required: true
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SimplePublicObject'
        default:
          $ref: '#/components/responses/Error'
      security:
      - oauth2_legacy:
        - tickets
      - private_apps_legacy:
        - tickets
  /crm/v3/objects/tickets:
    post:
      tags:
      - Basic
      summary: Create
      description: Create a ticket with the given properties and return a copy of
        the object, including the ID. Documentation and examples for creating standard
        tickets is provided.
      operationId: CreateTicket
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SimplePublicObjectInputForCreate'
        required: true
      responses:
        '201':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SimplePublicObject'
        default:
          $ref: '#/components/responses/Error'
      security:
      - oauth2_legacy:
        - tickets
      - private_apps_legacy:
        - tickets
  /crm/v3/objects/tasks/{taskId}:
    delete:
      tags:
      - Basic
      summary: Archive
      description: Move an Object identified by `{taskId}` to the recycling bin.
      operationId: DeleteTaskById
      parameters:
      - name: taskId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        '204':
          description: No content
          content: {}
        default:
          $ref: '#/components/responses/Error'
      security:
      - oauth2:
        - crm.objects.contacts.write
      - private_apps:
        - crm.objects.contacts.write
    patch:
      tags:
      - Basic
      summary: Update
      description: Perform a partial update of an Object identified by `{taskId}`.
        `{taskId}` refers to the internal object ID by default, or optionally any
        unique property value as specified by the `idProperty` query param. Provided
        property values will be overwritten. Read-only and non-existent properties
        will be ignored. Properties values can be cleared by passing an empty string.
      operationId: UpdateTaskById
      parameters:
      - name: taskId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: idProperty
        in: query
        description: The name of a property whose values are unique for this object
          type
        required: false
        style: form
        explode: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SimplePublicObjectInput'
        required: true
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SimplePublicObject'
        default:
          $ref: '#/components/responses/Error'
      security:
      - oauth2:
        - crm.objects.contacts.write
      - private_apps:
        - crm.objects.contacts.write
  /crm/v3/objects/tasks:
    post:
      tags:
      - Basic
      summary: Create
      description: Create a task with the given properties and return a copy of the
        object, including the ID. Documentation and examples for creating standard
        tasks is provided.
      operationId: CreateTask
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SimplePublicObjectInputForCreate'
        required: true
      responses:
        '201':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SimplePublicObject'
        default:
          $ref: '#/components/responses/Error'
      security:
      - oauth2:
        - crm.objects.contacts.write
      - private_apps:
        - crm.objects.contacts.write
  /crm/v3/properties/{objectType}/groups/{groupName}:
    delete:
      tags:
      - Groups
      summary: Archive a property group
      description: Move a property group identified by {groupName} to the recycling
        bin.
      operationId: DeletePropertyGroupByName
      parameters:
      - name: objectType
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: groupName
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        '204':
          description: No content
          content: {}
        default:
          $ref: '#/components/responses/Error'
      security:
      - private_apps:
        - crm.objects.orders.write
      - oauth2:
        - crm.schemas.orders.write
      - private_apps:
        - crm.schemas.orders.write
      - oauth2:
        - crm.objects.orders.write
      - oauth2:
        - crm.schemas.contacts.write
      - oauth2_legacy:
        - crm.pipelines.orders.write
      - private_apps_legacy:
        - contacts
      - private_apps:
        - crm.schemas.contacts.write
      - oauth2:
        - crm.schemas.carts.write
      - private_apps:
        - crm.objects.users.write
      - private_apps_legacy:
        - crm.schemas.custom.write
      - private_apps_legacy:
        - crm.pipelines.orders.write
      - private_apps:
        - crm.schemas.carts.write
      - oauth2_legacy:
        - tickets
      - oauth2:
        - crm.schemas.deals.write
      - oauth2:
        - crm.objects.users.write
      - private_apps_legacy:
        - e-commerce
      - oauth2:
        - crm.schemas.companies.write
      - private_apps:
        - crm.schemas.companies.write
      - private_apps:
        - crm.objects.carts.write
      - oauth2:
        - crm.objects.carts.write
      - oauth2_legacy:
        - e-commerce
      - private_apps_legacy:
        - tickets
      - private_apps:
        - crm.schemas.deals.write
    patch:
      tags:
      - Groups
      summary: Update a property group
      description: Perform a partial update of a property group identified by {groupName}.
        Provided fields will be overwritten.
      operationId: UpdatePropertyGroupByName
      parameters:
      - name: objectType
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: groupName
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PropertyGroupUpdate'
        required: true
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PropertyGroup'
        default:
          $ref: '#/components/responses/Error'
      security:
      - private_apps:
        - crm.objects.orders.write
      - oauth2:
        - crm.schemas.orders.write
      - private_apps:
        - crm.schemas.orders.write
      - oauth2:
        - crm.objects.orders.write
      - oauth2:
        - crm.schemas.contacts.write
      - oauth2_legacy:
        - crm.pipelines.orders.write
      - private_apps_legacy:
        - contacts
      - private_apps:
        - crm.schemas.contacts.write
      - oauth2:
        - crm.schemas.carts.write
      - private_apps:
        - crm.objects.users.write
      - private_apps_legacy:
        - crm.schemas.custom.write
      - private_apps_legacy:
        - crm.pipelines.orders.write
      - private_apps:
        - crm.schemas.carts.write
      - oauth2_legacy:
        - tickets
      - oauth2:
        - crm.schemas.deals.write
      - oauth2:
        - crm.objects.users.write
      - private_apps_legacy:
        - e-commerce
      - oauth2:
        - crm.schemas.companies.write
      - private_apps:
        - crm.schemas.companies.write
      - private_apps:
        - crm.objects.carts.write
      - oauth2:
        - crm.objects.carts.write
      - oauth2_legacy:
        - e-commerce
      - private_apps_legacy:
        - tickets
      - private_apps:
        - crm.schemas.deals.write
  /crm/v3/properties/{objectType}/{propertyName}:
    delete:
      tags:
      - Core
      summary: Archive a property
      description: Move a property identified by {propertyName} to the recycling bin.
      operationId: DeletePropertyByName
      parameters:
      - name: objectType
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: propertyName
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        '204':
          description: No content
          content: {}
        default:
          $ref: '#/components/responses/Error'
      security:
      - private_apps:
        - crm.objects.orders.write
      - oauth2:
        - crm.schemas.orders.write
      - private_apps:
        - crm.schemas.orders.write
      - oauth2:
        - crm.objects.orders.write
      - oauth2:
        - crm.schemas.contacts.write
      - oauth2_legacy:
        - crm.pipelines.orders.write
      - private_apps_legacy:
        - contacts
      - private_apps:
        - crm.schemas.contacts.write
      - oauth2:
        - crm.schemas.carts.write
      - private_apps:
        - crm.objects.users.write
      - private_apps_legacy:
        - crm.schemas.custom.write
      - private_apps_legacy:
        - crm.pipelines.orders.write
      - private_apps:
        - crm.schemas.carts.write
      - oauth2_legacy:
        - tickets
      - oauth2:
        - crm.schemas.deals.write
      - oauth2:
        - crm.objects.users.write
      - private_apps_legacy:
        - e-commerce
      - oauth2:
        - crm.schemas.companies.write
      - private_apps:
        - crm.schemas.companies.write
      - private_apps:
        - crm.objects.carts.write
      - oauth2:
        - crm.objects.carts.write
      - oauth2_legacy:
        - e-commerce
      - private_apps_legacy:
        - tickets
      - private_apps:
        - crm.schemas.deals.write
    patch:
      tags:
      - Core
      summary: Update a property
      description: Perform a partial update of a property identified by {propertyName}.
        Provided fields will be overwritten.
      operationId: UpdatePropertyByName
      parameters:
      - name: objectType
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: propertyName
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PropertyUpdate'
        required: true
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Property'
        default:
          $ref: '#/components/responses/Error'
      security:
      - private_apps:
        - crm.objects.orders.write
      - oauth2:
        - crm.schemas.orders.write
      - private_apps:
        - crm.schemas.orders.write
      - oauth2:
        - crm.objects.orders.write
      - oauth2:
        - crm.schemas.contacts.write
      - oauth2_legacy:
        - crm.pipelines.orders.write
      - private_apps_legacy:
        - contacts
      - private_apps:
        - crm.schemas.contacts.write
      - oauth2:
        - crm.schemas.carts.write
      - private_apps:
        - crm.objects.users.write
      - private_apps_legacy:
        - crm.schemas.custom.write
      - private_apps_legacy:
        - crm.pipelines.orders.write
      - private_apps:
        - crm.schemas.carts.write
      - oauth2_legacy:
        - tickets
      - oauth2:
        - crm.schemas.deals.write
      - oauth2:
        - crm.objects.users.write
      - private_apps_legacy:
        - e-commerce
      - oauth2:
        - crm.schemas.companies.write
      - private_apps:
        - crm.schemas.companies.write
      - private_apps:
        - crm.objects.carts.write
      - oauth2:
        - crm.objects.carts.write
      - oauth2_legacy:
        - e-commerce
      - private_apps_legacy:
        - tickets
      - private_apps:
        - crm.schemas.deals.write
  /crm/v3/properties/{objectType}:
    post:
      tags:
      - Core
      summary: Create a property
      description: Create and return a copy of a new property for the specified object
        type.
      operationId: CreateProperty
      parameters:
      - name: objectType
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PropertyCreate'
        required: true
      responses:
        '201':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Property'
        default:
          $ref: '#/components/responses/Error'
      security:
      - private_apps:
        - crm.objects.orders.write
      - oauth2:
        - crm.schemas.orders.write
      - private_apps:
        - crm.schemas.orders.write
      - oauth2:
        - crm.objects.orders.write
      - oauth2:
        - crm.schemas.contacts.write
      - oauth2_legacy:
        - crm.pipelines.orders.write
      - private_apps_legacy:
        - contacts
      - private_apps:
        - crm.schemas.contacts.write
      - oauth2:
        - crm.schemas.carts.write
      - private_apps:
        - crm.objects.users.write
      - private_apps_legacy:
        - crm.schemas.custom.write
      - private_apps_legacy:
        - crm.pipelines.orders.write
      - private_apps:
        - crm.schemas.carts.write
      - oauth2_legacy:
        - tickets
      - oauth2:
        - crm.schemas.deals.write
      - oauth2:
        - crm.objects.users.write
      - private_apps_legacy:
        - e-commerce
      - oauth2:
        - crm.schemas.companies.write
      - private_apps:
        - crm.schemas.companies.write
      - private_apps:
        - crm.objects.carts.write
      - oauth2:
        - crm.objects.carts.write
      - oauth2_legacy:
        - e-commerce
      - private_apps_legacy:
        - tickets
      - private_apps:
        - crm.schemas.deals.write
  /crm/v3/properties/{objectType}/groups:
    post:
      tags:
      - Groups
      summary: Create a property group
      description: Create and return a copy of a new property group.
      operationId: CreatePropertyGroup
      parameters:
      - name: objectType
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PropertyGroupCreate'
        required: true
      responses:
        '201':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PropertyGroup'
        default:
          $ref: '#/components/responses/Error'
      security:
      - private_apps:
        - crm.objects.orders.write
      - oauth2:
        - crm.schemas.orders.write
      - private_apps:
        - crm.schemas.orders.write
      - oauth2:
        - crm.objects.orders.write
      - oauth2:
        - crm.schemas.contacts.write
      - oauth2_legacy:
        - crm.pipelines.orders.write
      - private_apps_legacy:
        - contacts
      - private_apps:
        - crm.schemas.contacts.write
      - oauth2:
        - crm.schemas.carts.write
      - private_apps:
        - crm.objects.users.write
      - private_apps_legacy:
        - crm.schemas.custom.write
      - private_apps_legacy:
        - crm.pipelines.orders.write
      - private_apps:
        - crm.schemas.carts.write
      - oauth2_legacy:
        - tickets
      - oauth2:
        - crm.schemas.deals.write
      - oauth2:
        - crm.objects.users.write
      - private_apps_legacy:
        - e-commerce
      - oauth2:
        - crm.schemas.companies.write
      - private_apps:
        - crm.schemas.companies.write
      - private_apps:
        - crm.objects.carts.write
      - oauth2:
        - crm.objects.carts.write
      - oauth2_legacy:
        - e-commerce
      - private_apps_legacy:
        - tickets
      - private_apps:
        - crm.schemas.deals.write
components:
  schemas:
    ErrorDetail:
      required:
      - message
      type: object
      properties:
        subCategory:
          type: string
          description: A specific category that contains more specific detail about
            the error
        code:
          type: string
          description: The status code associated with the error detail
        in:
          type: string
          description: The name of the field or parameter in which the error was found.
        context:
          type: object
          additionalProperties:
            type: array
            items:
              type: string
          description: Context about the error condition
          example:
            missingScopes:
            - scope1
            - scope2
        message:
          type: string
          description: A human readable message describing the error along with remediation
            steps where appropriate
    Error:
      required:
      - category
      - correlationId
      - message
      type: object
      properties:
        subCategory:
          type: string
          description: A specific category that contains more specific detail about
            the error
        context:
          type: object
          additionalProperties:
            type: array
            items:
              type: string
          description: Context about the error condition
          example:
            missingScopes:
            - scope1
            - scope2
            invalidPropertyName:
            - propertyValue
        correlationId:
          type: string
          description: A unique identifier for the request. Include this value with
            any error reports or support tickets
          format: uuid
          example: aeb5f871-7f07-4993-9211-075dc63e7cbf
        links:
          type: object
          additionalProperties:
            type: string
          description: A map of link names to associated URIs containing documentation
            about the error or recommended remediation steps
          example:
            knowledge-base: https://www.hubspot.com/products/service/knowledge-base
        message:
          type: string
          description: A human readable message describing the error along with remediation
            steps where appropriate
          example: Invalid input (details will vary based on the error)
        category:
          type: string
          description: The error category
          example: VALIDATION_ERROR
        errors:
          type: array
          description: further information about the error
          items:
            $ref: '#/components/schemas/ErrorDetail'
      example:
        message: Invalid input (details will vary based on the error)
        correlationId: aeb5f871-7f07-4993-9211-075dc63e7cbf
        category: VALIDATION_ERROR
        links:
          knowledge-base: https://www.hubspot.com/products/service/knowledge-base
    PublicAssociationsForObject:
      required:
      - to
      - types
      type: object
      properties:
        types:
          type: array
          items:
            $ref: '#/components/schemas/AssociationSpec'
        to:
          $ref: '#/components/schemas/PublicObjectId'
    ValueWithTimestamp:
      required:
      - sourceType
      - timestamp
      - value
      type: object
      properties:
        sourceId:
          type: string
        sourceType:
          type: string
        sourceLabel:
          type: string
        updatedByUserId:
          type: integer
          format: int32
        value:
          type: string
        timestamp:
          type: string
          format: date-time
    SimplePublicObject:
      required:
      - createdAt
      - id
      - properties
      - updatedAt
      type: object
      properties:
        createdAt:
          type: string
          format: date-time
        archived:
          type: boolean
          example: false
        archivedAt:
          type: string
          format: date-time
        propertiesWithHistory:
          type: object
          additionalProperties:
            type: array
            items:
              $ref: '#/components/schemas/ValueWithTimestamp'
        id:
          type: string
          example: '512'
        properties:
          type: object
          additionalProperties:
            type: string
            nullable: true
          example:
            property_date: '1572480000000'
            property_radio: option_1
            property_number: '17'
            property_string: value
            property_checkbox: 'false'
            property_dropdown: choice_b
            property_multiple_checkboxes: chocolate;strawberry
        updatedAt:
          type: string
          format: date-time
      example:
        id: '512'
        properties:
          createdate: '2019-10-30T03:30:17.883Z'
          hs_call_body: Decision maker out, will call back tomorrow
          hs_call_duration: '3800'
          hs_call_from_number: "(857)\xCF829 5489"
          hs_call_recording_url: https://api.twilio.com/2010-04-01/Accounts/ex/Recordings/RE3079ac919116b2d22
          hs_call_status: COMPLETED
          hs_call_title: Discovery call
          hs_call_to_number: (509) 999 9999
          hs_lastmodifieddate: '2019-12-07T16:50:06.678Z'
          hs_timestamp: '2019-10-30T03:30:17.883Z'
          hubspot_owner_id: '64492917'
          hs_email_direction: EMAIL
          hs_email_sender_email: SalesPerson@hubspot.com
          hs_email_sender_firstname: Francis
          hs_email_sender_lastname: Seller
          hs_email_status: SENT
          hs_email_subject: Let's talk
          hs_email_text: Thanks for taking your interest let's find a time to connect
          hs_email_to_email: bh@biglytics.com
          hs_email_to_firstname: Brian
          hs_email_to_lastname: Buyer
          hs_internal_meeting_notes: These are the meeting notes
          hs_meeting_body: The first meeting to discuss options
          hs_meeting_end_time: '2021-03-23T01:52:44.872Z'
          hs_meeting_external_url: https://Zoom.com/0000
          hs_meeting_location: Remote
          hs_meeting_outcome: SCHEDULED
          hs_meeting_start_time: '2021-03-23T01:02:44.872Z'
          hs_meeting_title: Intro meeting
          hs_note_body: Spoke with decision maker john
          city: Cambridge
          domain: biglytics.net
          industry: Technology
          name: Biglytics
          phone: (877) 929-0687
          state: Massachusetts
          company: Biglytics
          email: bcooper@biglytics.net
          firstname: Bryan
          lastmodifieddate: '2019-12-07T16:50:06.678Z'
          lastname: Cooper
          website: biglytics.net
          amount: '1500.00'
          closedate: '2019-12-07T16:50:06.678Z'
          dealname: Custom data integrations
          dealstage: presentationscheduled
          pipeline: default
          hs_pipeline: support_pipeline
          hs_pipeline_stage: open
          hs_ticket_priority: HIGH
          subject: troubleshoot report
          hs_task_body: Send Proposal
          hs_task_priority: HIGH
          hs_task_status: WAITING
          hs_task_subject: Follow-up for Brian Buyer
        createdAt: '2019-10-30T03:30:17.883Z'
        updatedAt: '2019-12-07T16:50:06.678Z'
        archived: false
    PublicObjectId:
      required:
      - id
      type: object
      properties:
        id:
          type: string
    SimplePublicObjectInput:
      required:
      - properties
      type: object
      properties:
        properties:
          type: object
          additionalProperties:
            type: string
          example:
            property_date: '1572480000000'
            property_radio: option_1
            property_number: '17'
            property_string: value
            property_checkbox: 'false'
            property_dropdown: choice_b
            property_multiple_checkboxes: chocolate;strawberry
      example:
        properties:
          hs_call_body: Decision maker out, will call back tomorrow
          hs_timestamp: '2019-10-30T03:30:17.883Z'
          hs_call_title: Discovery call
          hs_call_status: COMPLETED
          hs_call_duration: '3800'
          hubspot_owner_id: '64492917'
          hs_call_to_number: (509) 999 9999
          hs_call_from_number: "(857)\xCF829 5489"
          hs_call_recording_url: https://api.twilio.com/2010-04-01/Accounts/ex/Recordings/RE3079ac919116b2d22
          hs_email_text: Thanks for taking your interest let's find a time to connect
          hs_email_status: SENT
          hs_email_subject: Let's talk
          hs_email_to_email: bh@biglytics.com
          hs_email_direction: EMAIL
          hs_email_to_lastname: Buyer
          hs_email_sender_email: SalesPerson@hubspot.com
          hs_email_to_firstname: Brian
          hs_email_sender_lastname: Seller
          hs_email_sender_firstname: Francis
          hs_meeting_body: The first meeting to discuss options
          hs_meeting_title: Intro meeting
          hs_meeting_outcome: SCHEDULED
          hs_meeting_end_time: '2021-03-23T01:52:44.872Z'
          hs_meeting_location: Remote
          hs_meeting_start_time: '2021-03-23T01:02:44.872Z'
          hs_meeting_external_url: https://Zoom.com/0000
          hs_internal_meeting_notes: These are the meeting notes
          hs_note_body: Spoke with decision maker john
          city: Cambridge
          name: Biglytics
          phone: (877) 929-0687
          state: Massachusetts
          domain: biglytics.net
          industry: Technology
          email: bcooper@biglytics.net
          company: Biglytics
          website: biglytics.net
          lastname: Cooper
          firstname: Bryan
          amount: '1500.00'
          dealname: Custom data integrations
          pipeline: default
          closedate: '2019-12-07T16:50:06.678Z'
          dealstage: presentationscheduled
          subject: troubleshoot report
          hs_pipeline: support_pipeline
          hs_pipeline_stage: open
          hs_ticket_priority: HIGH
          hs_task_body: Send Proposal
          hs_task_status: WAITING
          hs_task_subject: Follow-up for Brian Buyer
          hs_task_priority: HIGH
        associations:
        - to:
            id: '101'
          types:
          - associationCategory: HUBSPOT_DEFINED
            associationTypeId: 2
    AssociationSpec:
      required:
      - associationCategory
      - associationTypeId
      type: object
      properties:
        associationCategory:
          type: string
          enum:
          - HUBSPOT_DEFINED
          - USER_DEFINED
          - INTEGRATOR_DEFINED
        associationTypeId:
          type: integer
          format: int32
    SimplePublicObjectInputForCreate:
      required:
      - associations
      - properties
      type: object
      properties:
        associations:
          type: array
          items:
            $ref: '#/components/schemas/PublicAssociationsForObject'
        properties:
          type: object
          additionalProperties:
            type: string
          example:
            city: Cambridge
            name: Biglytics
            phone: (877) 929-0687
            state: Massachusetts
            domain: biglytics.net
            industry: Technology
            email: bcooper@biglytics.net
            company: Biglytics
            website: biglytics.net
            lastname: Cooper
            firstname: Bryan
            amount: '1500.00'
            dealname: Custom data integrations
            pipeline: default
            closedate: '2019-12-07T16:50:06.678Z'
            dealstage: presentationscheduled
            hubspot_owner_id: '910901'
      example:
        properties:
          hs_call_body: Decision maker out, will call back tomorrow
          hs_timestamp: '2019-10-30T03:30:17.883Z'
          hs_call_title: Discovery call
          hs_call_status: COMPLETED
          hs_call_duration: '3800'
          hubspot_owner_id: '64492917'
          hs_call_to_number: (509) 999 9999
          hs_call_from_number: "(857)\xCF829 5489"
          hs_call_recording_url: https://api.twilio.com/2010-04-01/Accounts/ex/Recordings/RE3079ac919116b2d22
          hs_email_text: Thanks for taking your interest let's find a time to connect
          hs_email_status: SENT
          hs_email_subject: Let's talk
          hs_email_to_email: bh@biglytics.com
          hs_email_direction: EMAIL
          hs_email_to_lastname: Buyer
          hs_email_sender_email: SalesPerson@hubspot.com
          hs_email_to_firstname: Brian
          hs_email_sender_lastname: Seller
          hs_email_sender_firstname: Francis
          hs_meeting_body: The first meeting to discuss options
          hs_meeting_title: Intro meeting
          hs_meeting_outcome: SCHEDULED
          hs_meeting_end_time: '2021-03-23T01:52:44.872Z'
          hs_meeting_location: Remote
          hs_meeting_start_time: '2021-03-23T01:02:44.872Z'
          hs_meeting_external_url: https://Zoom.com/0000
          hs_internal_meeting_notes: These are the meeting notes
          hs_note_body: Spoke with decision maker john
          city: Cambridge
          name: Biglytics
          phone: (877) 929-0687
          state: Massachusetts
          domain: biglytics.net
          industry: Technology
          email: bcooper@biglytics.net
          company: Biglytics
          website: biglytics.net
          lastname: Cooper
          firstname: Bryan
          amount: '1500.00'
          dealname: Custom data integrations
          pipeline: default
          closedate: '2019-12-07T16:50:06.678Z'
          dealstage: presentationscheduled
          subject: troubleshoot report
          hs_pipeline: support_pipeline
          hs_pipeline_stage: open
          hs_ticket_priority: HIGH
          hs_task_body: Send Proposal
          hs_task_status: WAITING
          hs_task_subject: Follow-up for Brian Buyer
          hs_task_priority: HIGH
        associations:
        - to:
            id: '101'
          types:
          - associationCategory: HUBSPOT_DEFINED
            associationTypeId: 2
    MembershipsUpdateResponse:
      required:
      - recordIdsMissing
      - recordIdsRemoved
      - recordsIdsAdded
      type: object
      properties:
        recordIdsRemoved:
          type: array
          description: The IDs of the records that were `removed` from the list.
          items:
            type: string
        recordsIdsAdded:
          type: array
          items:
            type: string
        recordIdsMissing:
          type: array
          description: The IDs of the records that were `missing` (e.g. did not exist
            in the portal) and so were not `added` or `removed`.
          items:
            type: string
    MembershipChangeRequest:
      required:
      - recordIdsToAdd
      - recordIdsToRemove
      type: object
      properties:
        recordIdsToRemove:
          type: array
          description: ''
          example:
          - 654
          items:
            type: string
        recordIdsToAdd:
          type: array
          description: ''
          example:
          - 123
          - 456
          - 789
          items:
            type: string
    PropertyGroup:
      required:
      - archived
      - displayOrder
      - label
      - name
      type: object
      properties:
        archived:
          type: boolean
        name:
          type: string
          description: The internal property group name, which must be used when referencing
            the property group via the API.
          example: mypropertygroup
        displayOrder:
          type: integer
          description: Property groups are displayed in order starting with the lowest
            positive integer value. Values of -1 will cause the property group to
            be displayed after any positive values.
          format: int32
          example: -1
        label:
          type: string
          description: A human-readable label that will be shown in HubSpot.
          example: My Property Group
      description: An ID for a group of properties
      example:
        name: mypropertygroup
        label: My Property Group
        displayOrder: -1
    PropertyCreate:
      required:
      - fieldType
      - groupName
      - label
      - name
      - type
      type: object
      properties:
        hidden:
          type: boolean
          description: If true, the property won't be visible and can't be used in
            HubSpot.
          example: false
        displayOrder:
          type: integer
          description: Properties are displayed in order starting with the lowest
            positive integer value. Values of -1 will cause the property to be displayed
            after any positive values.
          format: int32
          example: 2
        description:
          type: string
          description: A description of the property that will be shown as help text
            in HubSpot.
        label:
          type: string
          description: A human-readable property label that will be shown in HubSpot.
          example: My Contact Property
        type:
          type: string
          description: The data type of the property.
          example: enumeration
          enum:
          - string
          - number
          - date
          - datetime
          - enumeration
          - bool
        formField:
          type: boolean
          description: Whether or not the property can be used in a HubSpot form.
          example: true
        groupName:
          type: string
          description: The name of the property group the property belongs to.
          example: contactinformation
        referencedObjectType:
          type: string
          description: Should be set to 'OWNER' when 'externalOptions' is true, which
            causes the property to dynamically pull option values from the current
            HubSpot users.
        name:
          type: string
          description: The internal property name, which must be used when referencing
            the property via the API.
        options:
          type: array
          description: A list of valid options for the property. This field is required
            for enumerated properties.
          example:
          - label: Option A
            value: A
            hidden: false
            description: Choice number one
            displayOrder: 1
          - label: Option B
            value: B
            hidden: false
            description: Choice number two
            displayOrder: 2
          items:
            $ref: '#/components/schemas/OptionInput'
        calculationFormula:
          type: string
          description: Represents a formula that is used to compute a calculated property.
        hasUniqueValue:
          type: boolean
          description: Whether or not the property's value must be unique. Once set,
            this can't be changed.
          example: false
        fieldType:
          type: string
          description: Controls how the property appears in HubSpot.
          example: select
          enum:
          - textarea
          - text
          - date
          - file
          - number
          - select
          - radio
          - checkbox
          - booleancheckbox
          - calculation_equation
        externalOptions:
          type: boolean
          description: Applicable only for 'enumeration' type properties.  Should
            be set to true in conjunction with a 'referencedObjectType' of 'OWNER'.  Otherwise
            false.
      example:
        label: My Contact Property
        type: enumeration
        fieldType: select
        groupName: contactinformation
        hidden: false
        displayOrder: 2
        hasUniqueValue: false
        formField: true
        options:
        - label: Option A
          description: Choice number one
          value: A
          displayOrder: 1
          hidden: false
        - label: Option B
          description: Choice number two
          value: B
          displayOrder: 2
          hidden: false
    OptionInput:
      required:
      - hidden
      - label
      - value
      type: object
      properties:
        hidden:
          type: boolean
          description: Hidden options won't be shown in HubSpot.
          example: false
        displayOrder:
          type: integer
          description: Options are shown in order starting with the lowest positive
            integer value. Values of -1 will cause the option to be displayed after
            any positive values.
          format: int32
          example: 1
        description:
          type: string
          description: A description of the option.
          example: Choice number one
        label:
          type: string
          description: A human-readable option label that will be shown in HubSpot.
          example: Option A
        value:
          type: string
          description: The internal value of the option, which must be used when setting
            the property value through the API.
          example: A
      example:
        label: Option A
        description: Choice number one
        value: A
        displayOrder: 1
        hidden: false
    PropertyUpdate:
      type: object
      properties:
        groupName:
          type: string
          description: The name of the property group the property belongs to.
          example: contactinformation
        hidden:
          type: boolean
          description: If true, the property won't be visible and can't be used in
            HubSpot.
          example: false
        options:
          type: array
          description: A list of valid options for the property.
          example:
          - label: Option A
            value: A
            hidden: false
            description: Choice number one
            displayOrder: 1
          - label: Option B
            value: B
            hidden: false
            description: Choice number two
            displayOrder: 2
          items:
            $ref: '#/components/schemas/OptionInput'
        displayOrder:
          type: integer
          description: Properties are displayed in order starting with the lowest
            positive integer value. Values of -1 will cause the Property to be displayed
            after any positive values.
          format: int32
          example: 2
        description:
          type: string
          description: A description of the property that will be shown as help text
            in HubSpot.
        calculationFormula:
          type: string
          description: Represents a formula that is used to compute a calculated property.
        label:
          type: string
          description: A human-readable property label that will be shown in HubSpot.
          example: My Contact Property
        type:
          type: string
          description: The data type of the property.
          example: enumeration
          enum:
          - string
          - number
          - date
          - datetime
          - enumeration
          - bool
        fieldType:
          type: string
          description: Controls how the property appears in HubSpot.
          example: select
          enum:
          - textarea
          - text
          - date
          - file
          - number
          - select
          - radio
          - checkbox
          - booleancheckbox
          - calculation_equation
        formField:
          type: boolean
          description: Whether or not the property can be used in a HubSpot form.
          example: true
      example:
        label: My Contact Property
        type: enumeration
        fieldType: select
        groupName: contactinformation
        hidden: false
        displayOrder: 2
        formField: true
        options:
        - label: Option A
          description: Choice number one
          value: A
          displayOrder: 1
          hidden: false
        - label: Option B
          description: Choice number two
          value: B
          displayOrder: 2
          hidden: false
    PropertyGroupCreate:
      required:
      - label
      - name
      type: object
      properties:
        name:
          type: string
          description: The internal property group name, which must be used when referencing
            the property group via the API.
          example: mypropertygroup
        displayOrder:
          type: integer
          description: Property groups are displayed in order starting with the lowest
            positive integer value. Values of -1 will cause the property group to
            be displayed after any positive values.
          format: int32
          example: -1
        label:
          type: string
          description: A human-readable label that will be shown in HubSpot.
          example: My Property Group
      example:
        name: mypropertygroup
        label: My Property Group
        displayOrder: -1
    PropertyModificationMetadata:
      required:
      - archivable
      - readOnlyDefinition
      - readOnlyValue
      type: object
      properties:
        readOnlyOptions:
          type: boolean
        readOnlyValue:
          type: boolean
        readOnlyDefinition:
          type: boolean
        archivable:
          type: boolean
    Option:
      required:
      - hidden
      - label
      - value
      type: object
      properties:
        hidden:
          type: boolean
          description: Hidden options will not be displayed in HubSpot.
          example: false
        displayOrder:
          type: integer
          description: Options are displayed in order starting with the lowest positive
            integer value. Values of -1 will cause the option to be displayed after
            any positive values.
          format: int32
          example: 1
        description:
          type: string
          description: A description of the option.
          example: Choice number one
        label:
          type: string
          description: A human-readable option label that will be shown in HubSpot.
          example: Option A
        value:
          type: string
          description: The internal value of the option, which must be used when setting
            the property value through the API.
          example: A
      example:
        label: Option A
        description: Choice number one
        value: A
        displayOrder: 1
        hidden: false
    PropertyGroupUpdate:
      type: object
      properties:
        displayOrder:
          type: integer
          description: Property groups are displayed in order starting with the lowest
            positive integer value. Values of -1 will cause the property group to
            be displayed after any positive values.
          format: int32
          example: -1
        label:
          type: string
          description: A human-readable label that will be shown in HubSpot.
          example: My Property Group
      example:
        label: My Property Group
        displayOrder: -1
    Property:
      required:
      - description
      - fieldType
      - groupName
      - label
      - name
      - options
      - type
      type: object
      properties:
        createdUserId:
          type: string
          description: The internal user ID of the user who created the property in
            HubSpot. This field may not exist if the property was created outside
            of HubSpot.
        hidden:
          type: boolean
          description: Whether or not the property will be hidden from the HubSpot
            UI. It's recommended this be set to false for custom properties.
          example: false
        modificationMetadata:
          $ref: '#/components/schemas/PropertyModificationMetadata'
        displayOrder:
          type: integer
          description: Properties are shown in order, starting with the lowest positive
            integer value.
          format: int32
          example: 2
        description:
          type: string
          description: A description of the property that will be shown as help text
            in HubSpot.
        showCurrencySymbol:
          type: boolean
          description: Whether or not the property will display the currency symbol
            set in the account settings.
        label:
          type: string
          description: A human-readable property label that will be shown in HubSpot.
          example: My Contact Property
        type:
          type: string
          description: The property data type.
          example: enumeration
        hubspotDefined:
          type: boolean
          description: This will be true for default object properties built into
            HubSpot.
        formField:
          type: boolean
          description: Whether or not the property can be used in a HubSpot form.
          example: true
        createdAt:
          type: string
          description: ''
          format: date-time
        archivedAt:
          type: string
          description: When the property was archived.
          format: date-time
        archived:
          type: boolean
          description: Whether or not the property is archived.
        groupName:
          type: string
          description: The name of the property group the property belongs to.
          example: contactinformation
        referencedObjectType:
          type: string
          description: If this property is related to other object(s), they'll be
            listed here.
        name:
          type: string
          description: The internal property name, which must be used when referencing
            the property via the API.
          example: my_contact_property
        options:
          type: array
          description: A list of valid options for the property. This field is required
            for enumerated properties, but will be empty for other property types.
          example:
          - label: Option A
            value: A
            hidden: false
            description: Choice number one
            displayOrder: 1
          - label: Option B
            value: B
            hidden: false
            description: Choice number two
            displayOrder: 2
          items:
            $ref: '#/components/schemas/Option'
        calculationFormula:
          type: string
          description: Represents a formula that is used to compute a calculated property.
        hasUniqueValue:
          type: boolean
          description: Whether or not the property's value must be unique. Once set,
            this can't be changed.
          example: false
        fieldType:
          type: string
          description: Controls how the property appears in HubSpot.
          example: select
        updatedUserId:
          type: string
          description: The internal user ID of the user who updated the property in
            HubSpot. This field may not exist if the property was updated outside
            of HubSpot.
        calculated:
          type: boolean
          description: For default properties, true indicates that the property is
            calculated by a HubSpot process. It has no effect for custom properties.
        externalOptions:
          type: boolean
          description: For default properties, true indicates that the options are
            stored externally to the property settings.
        updatedAt:
          type: string
          description: ''
          format: date-time
      example:
        name: my_contact_property
        label: My Contact Property
        type: enumeration
        fieldType: select
        groupName: contactinformation
        hidden: false
        displayOrder: 2
        hasUniqueValue: false
        formField: true
        modificationMetadata:
          readOnlyOptions: false
          readOnlyValue: false
          readOnlyDefinition: false
          archivable: true
        options:
        - label: Option A
          description: Choice number one
          value: A
          displayOrder: 1
          hidden: false
        - label: Option B
          description: Choice number two
          value: B
          displayOrder: 2
          hidden: false
  responses:
    Error:
      description: An error occurred.
      content:
        '*/*':
          schema:
            $ref: '#/components/schemas/Error'
  securitySchemes: {}
  parameters: {}
  examples: {}
  requestBodies: {}
  headers: {}
  links: {}
  callbacks: {}
tags:
- name: Batch
- name: Groups
- name: Core
